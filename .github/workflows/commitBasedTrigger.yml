name: CI + CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
#To build the war in sandbox
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: Build with Maven
        run: mvn clean install
      - name: Upload WAR artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-war-artifact
          path: target/*.war
      - name: Copy war file
        run: |
          cp /home/runner/work/Team_connect/Team_connect/target/TeamConnect-0.0.1-SNAPSHOT.war /home/vvdn/Documents/
          cd /opt/Tomcat/bin/
          echo "vvdn123" | sudo -S su -c '
          ./shutdown.sh    
          pwd
          sleep 30
          cp /home/vvdn/Documents/*.war /opt/Tomcat/webapps
          ./startup.sh'
    
        
  NonProdStaging:
  #To copy the build war from sandbox to Non prod Jump box
    name: Deploy to NonProd Jump 
    if: github.event.ref == 'refs/heads/main'
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Execute shell script
        run: sh myscript.sh
    environment: 
      name: JumpServer-NP
      url: 'http://www.google.com'
    
  DeployDev:
  #To deploy the war in development server
    name: Deploy to Dev 
    #if: github.event.ref == 'refs/heads/main'
    needs: [NonProdStaging]
    runs-on: ubuntu-latest
    environment: 
      name: Development-CBT
      url: 'http://www.google.com'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
    
  DeployStaging:
  #To copy the war from development server to prod Jump box
    name: Deploy to Staging 
    #if: github.event.ref == 'refs/heads/main'
    needs: [DeployDev]
    runs-on: ubuntu-latest
    environment: 
      name: JumpServer-Prod
      url: 'http://test.myapp.com'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Deploy
        run: echo I am deploying! 
            
  DeployProd:
  #To deploy the war in development server
    name: Deploy to Production 
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment: 
      name: Production-CBT
      url: 'http://www.myapp.com'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Deploy
        run: echo I am deploying!
